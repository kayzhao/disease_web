<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd "
	xmlns:tx="http://www.springframework.org/schema/tx">

	<!-- component scan -->
	<context:component-scan base-package="com.csu.bio" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- CommonsMultipart -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="500000" />
	</bean>

	<!-- velocity -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
			</props>
		</property>
	</bean>
	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/views" />
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="contentType">text/html;charset=UTF-8</prop>
			</props>
		</property>
	</bean>

	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
			<bean
				class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
				<!-- 设置为true以忽略对Accept Header的支持 -->
				<property name="ignoreAcceptHeader" value="true" />

				<!-- 用于开启 /userinfo/123?format=json 的支持 -->
				<property name="favorParameter" value="false" />

				<!-- 用于开启 /userinfo/123.json的支持 -->
				<property name="favorPathExtension" value="true"></property>

				<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
				<property name="defaultContentType" value="text/html" />

				<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
				<property name="mediaTypes">
					<map>
						<entry key="json" value="text/plain" />
					</map>
				</property>
			</bean>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="exposeContextBeansAsAttributes" value="true" />
					<property name="requestContextAttribute" value="rc" />
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".html"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="contentType" value="text/plain"></property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Interceptors -->
	<mvc:interceptors>
		<!-- Global Interceptor -->
		<bean class="com.csu.bio.frame.interceptor.GlobalInterceptor" />
		<!-- Language configuration -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>
	</mvc:interceptors>

	<!-- annotation -->
	<mvc:annotation-driven>
		<!-- remove the json null field -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<!-- property name="prefixJson" value="true" /> <property name="supportedMediaTypes" 
					value="application/json" / -->
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion">
							<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
</beans>